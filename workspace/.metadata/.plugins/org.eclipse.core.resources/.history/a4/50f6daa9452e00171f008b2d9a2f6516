
import java.awt.Color;
import java.awt.Point;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Random;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

import java.util.ArrayList;

public class KeyStrokes implements ActionListener {
	
	private ArrayList<Observer> observers = new ArrayList<Observer>();
	
	//addKeyListener(new TAdapter());
	Timer timer;

	public KeyStrokes() {
		timer = new Timer(400, this);
		timer.start();
		KeyStrokes keys = new KeyStrokes();
		addKeyListener(new TAdapter());
	}

	public void attach(Observer o) {
		observers.add(o);
	}
	
	public void detach(Observer o) {
		observers.remove(o);
	}
	
	protected void notifyObserver(KeyEvent key) {
		for (Observer o : observers) {
			o.onKeyStroke(key);
		}
		//this.observers.forEach(observer -> observer.onKeyStroke(key);
	}	
	
	class TAdapter extends KeyAdapter {
		public void keyPressed(KeyEvent key) {
			//System.out.println("Key stroke detected");	
			//notifyObserver(key);
			return;
		}
	}
	/*
    class TAdapter extends KeyAdapter {
        public void keyPressed(KeyEvent e) {

            if (!isStarted || activeTetro == null) {  
                return;
            }

            int keycode = e.getKeyCode();

            if (keycode == 'p' || keycode == 'P') {
                pause();
                return;
            }

            if (isPaused)
                return;

            switch (keycode) {
            case KeyEvent.VK_LEFT:
                tryMove(activeTetro, x - 1, y);
                break;
            case KeyEvent.VK_RIGHT:
                tryMove(activeTetro, x + 1, y);
                break;
            case KeyEvent.VK_UP:
                tryMove(activeTetro.rotatePiece(), x, y);
                break;                
            case KeyEvent.VK_DOWN:
            	tryMove(activeTetro, x, y - 1);
                break;    
            }

        }
    }
	 */

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}
}
